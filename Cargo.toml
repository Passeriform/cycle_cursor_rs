[package]
name = "cycle_cursor"
description = "Cyclic cursor implementation over generic iterators"
version = "0.1.0"
license-file = "LICENSE"
readme = "README.md"
authors = ["Utkarsh Bhardwaj (Passeriform) <passeriform.ub@gmail.com>"]
keywords = ["iterator", "cycle", "vec", "cursor", "linked-list"]
categories = ["algorithms", "data-structures"]
repository = "https://github.com/Passeriform/cycle_cursor.rs"
homepage = "https://www.passeriform.com/prod/cycle_cursor.rs"
edition = "2021"
exclude = [
    "/.github/",
    "/ci/",
    "/benchsuite/",
    "/scripts/",
]

[badges]
is-it-maintained-issue-resolution = { repository = "https://github.com/Passeriform/cycle_cursor" }
is-it-maintained-open-issues = { repository = "https://github.com/Passeriform/cycle_cursor" }
maintenance = { status = "actively-developed" }

[lints.rust]
absolute_paths_not_starting_with_crate = "warn"
deprecated_in_future = "warn"
deprecated_safe = "warn"
elided_lifetimes_in_paths = "warn"
explicit_outlives_requirements = "warn"
ffi_unwind_calls = "warn"
keyword-idents = "warn"
keyword_idents_2018 = "warn"
keyword_idents_2024 = "warn"
let_underscore_drop = "warn"
macro_use_extern_crate = "warn"
meta_variable_misuse = "warn"
missing_abi = "warn"
missing_copy_implementations = "warn"
missing_debug_implementations = "warn"
missing_docs = "warn"
missing_unsafe_on_extern = "warn"
non_ascii_idents = "warn"
non_local_definitions = "warn"
redundant_lifetimes = "warn"
rust_2021_incompatible_closure_captures = "warn"
rust_2021_incompatible_or_patterns = "warn"
rust_2021_prefixes_incompatible_syntax = "warn"
rust_2021_prelude_collisions = "warn"
single_use_lifetimes = "warn"
trivial_casts = "warn"
trivial_numeric_casts = "warn"
unit_bindings = "warn"
unnameable_types = "warn"
unreachable_pub = "warn"
unsafe_code = "warn"
unsafe_op_in_unsafe_fn = "warn"
unstable_features = "warn"
unused_crate_dependencies = "warn"
unused_extern_crates = "warn"
unused_import_braces = "warn"
unused_lifetimes = "warn"
unused_macro_rules = "warn"
unused_qualifications = "warn"
unused_results = "warn"
variant_size_differences = "warn"

[lints.clippy]
all = { priority = -1, level = "deny" }
correctness = { priority = -1, level = "deny" }
suspicious = { priority = -1, level = "deny" }
style = { priority = -1, level = "deny" }
complexity = { priority = -1, level = "deny" }
perf = { priority = -1, level = "deny" }
pedantic = { priority = -1, level = "deny" }
restriction = { priority = -1, level = "deny" }
nursery = { priority = -1, level = "deny" }
cargo = { priority = -1, level = "deny" }
as_conversions = "warn"
missing_docs_in_private_items = "warn"
cast_lossless = "warn"
min_ident_chars = "warn"
indexing_slicing = "warn"
std_instead_of_alloc = "warn"
arithmetic_side_effects = "warn"
missing_errors_doc = "warn"
exhaustive_structs = "warn"
module_name_repetitions = "warn"
std_instead_of_core = "warn"
exhaustive_enums = "warn"
shadow_reuse = "warn"
# TODO: Use the below rule to add wrap_err context
question_mark_used = "warn"
mod_module_files = "allow"
multiple_crate_versions = "allow"
blanket_clippy_restriction_lints = "allow"
separated_literal_suffix = "allow"
missing_trait_methods = "allow"
single_call_fn = "allow"
implicit_return = "allow"
